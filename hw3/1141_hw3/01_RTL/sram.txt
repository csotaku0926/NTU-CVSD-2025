sram_256x8 u_sram10(
		.A(sram_in_addr), // address
		.CEN(sram_r0_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram10_in_data), // data input
		.CLK(i_clk),
		.Q(sram10_out_data) // data output
	);
	sram_256x8 u_sram11(
		.A(sram_in_addr), // address
		.CEN(sram_r0_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram11_in_data), // data input
		.CLK(i_clk),
		.Q(sram11_out_data) // data output
	);
	sram_256x8 u_sram12(
		.A(sram_in_addr), // address
		.CEN(sram_r0_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram12_in_data), // data input
		.CLK(i_clk),
		.Q(sram12_out_data) // data output
	);
	sram_256x8 u_sram13(
		.A(sram_in_addr), // address
		.CEN(sram_r0_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram13_in_data), // data input
		.CLK(i_clk),
		.Q(sram13_out_data) // data output
	);
	sram_256x8 u_sram20(
		.A(sram_in_addr), // address
		.CEN(sram_r1_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram20_in_data), // data input
		.CLK(i_clk),
		.Q(sram20_out_data) // data output
	);
	sram_256x8 u_sram21(
		.A(sram_in_addr), // address
		.CEN(sram_r1_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram21_in_data), // data input
		.CLK(i_clk),
		.Q(sram21_out_data) // data output
	);
	sram_256x8 u_sram22(
		.A(sram_in_addr), // address
		.CEN(sram_r1_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram22_in_data), // data input
		.CLK(i_clk),
		.Q(sram22_out_data) // data output
	);
	sram_256x8 u_sram23(
		.A(sram_in_addr), // address
		.CEN(sram_r1_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram23_in_data), // data input
		.CLK(i_clk),
		.Q(sram23_out_data) // data output
	);
	sram_256x8 u_sram30(
		.A(sram_in_addr), // address
		.CEN(sram_r2_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram30_in_data), // data input
		.CLK(i_clk),
		.Q(sram30_out_data) // data output
	);
	sram_256x8 u_sram31(
		.A(sram_in_addr), // address
		.CEN(sram_r2_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram31_in_data), // data input
		.CLK(i_clk),
		.Q(sram31_out_data) // data output
	);
	sram_256x8 u_sram32(
		.A(sram_in_addr), // address
		.CEN(sram_r2_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram32_in_data), // data input
		.CLK(i_clk),
		.Q(sram32_out_data) // data output
	);
	sram_256x8 u_sram33(
		.A(sram_in_addr), // address
		.CEN(sram_r2_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram33_in_data), // data input
		.CLK(i_clk),
		.Q(sram33_out_data) // data output
	);
	sram_256x8 u_sram00(
		.A(sram_in_addr), // address
		.CEN(sram_r3_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram00_in_data), // data input
		.CLK(i_clk),
		.Q(sram00_out_data) // data output
	);
	sram_256x8 u_sram01(
		.A(sram_in_addr), // address
		.CEN(sram_r3_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram01_in_data), // data input
		.CLK(i_clk),
		.Q(sram01_out_data) // data output
	);
	sram_256x8 u_sram02(
		.A(sram_in_addr), // address
		.CEN(sram_r3_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram02_in_data), // data input
		.CLK(i_clk),
		.Q(sram02_out_data) // data output
	);
	sram_256x8 u_sram03(
		.A(sram_in_addr), // address
		.CEN(sram_r3_in_CEN), // chip enable: 1 means enable, 0 is disable
		.WEN(sram_in_WEN), // write enable: 1 writes, 0 reads
		.D(sram03_in_data), // data input
		.CLK(i_clk),
		.Q(sram03_out_data) // data output
	);

		// assign sram00_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 0) & (img_cnt_r < 13'd512);
	// assign sram01_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 0) & (13'd512 <= img_cnt_r);
	// assign sram10_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 1) & (img_cnt_r < 13'd512);
	// assign sram11_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 1) & (13'd512 <= img_cnt_r);
	// assign sram20_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 2) & (img_cnt_r < 13'd512);
	// assign sram21_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 2) & (13'd512 <= img_cnt_r);
	// assign sram30_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 3) & (img_cnt_r < 13'd512);
	// assign sram31_in_CEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 3) & (13'd512 <= img_cnt_r);

	// assign sram00_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 0) & (img_cnt_r < 13'd512);
	// assign sram01_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 0) & (13'd512 <= img_cnt_r);
	// assign sram10_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 1) & (img_cnt_r < 13'd512);
	// assign sram11_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 1) & (13'd512 <= img_cnt_r);
	// assign sram20_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 2) & (img_cnt_r < 13'd512);
	// assign sram21_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 2) & (13'd512 <= img_cnt_r);
	// assign sram30_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 3) & (img_cnt_r < 13'd512);
	// assign sram31_in_WEN = (state_r == S_INIMG) & i_in_valid & ((img_cnt_r & 2'b11) == 3) & (13'd512 <= img_cnt_r);